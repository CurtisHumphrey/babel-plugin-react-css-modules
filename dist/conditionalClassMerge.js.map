{"version":3,"sources":["../src/conditionalClassMerge.js"],"names":["classNameExpression","styleNameExpression","styleNameFirst"],"mappings":";;;;;;AAEA;;AAMA;;kBAEe,CACbA,mBADa,EAEbC,mBAFa,EAGbC,cAHa,KAIL;AACR,MAAIA,cAAJ,EAAoB;AAClB,WAAO,kCACL,GADK,EAELD,mBAFK,EAGL,uCACED,mBADF,EAEE,kCACE,GADF,EAEE,+BAAc,GAAd,CAFF,EAGEA,mBAHF,CAFF,EAOE,+BAAc,EAAd,CAPF,CAHK,CAAP;AAaD;;AAED,SAAO,kCACL,GADK,EAEL,uCACEA,mBADF,EAEE,kCACE,GADF,EAEEA,mBAFF,EAGE,+BAAc,GAAd,CAHF,CAFF,EAOE,+BAAc,EAAd,CAPF,CAFK,EAWLC,mBAXK,CAAP;AAaD,C","file":"conditionalClassMerge.js","sourcesContent":["// @flow\n\nimport {\n  binaryExpression,\n  conditionalExpression,\n  stringLiteral\n} from 'babel-types';\n\n/* eslint-disable flowtype/no-weak-types */\n\nexport default (\n  classNameExpression: any,\n  styleNameExpression: any,\n  styleNameFirst: boolean,\n): any => {\n  if (styleNameFirst) {\n    return binaryExpression(\n      '+',\n      styleNameExpression,\n      conditionalExpression(\n        classNameExpression,\n        binaryExpression(\n          '+',\n          stringLiteral(' '),\n          classNameExpression\n        ),\n        stringLiteral('')\n      )\n    );\n  }\n\n  return binaryExpression(\n    '+',\n    conditionalExpression(\n      classNameExpression,\n      binaryExpression(\n        '+',\n        classNameExpression,\n        stringLiteral(' ')\n      ),\n      stringLiteral('')\n    ),\n    styleNameExpression\n  );\n};\n"]}